p10k configure.
nano .zprofile
rm -rf aliasrc
touch aliasrc
nano aliasrc
la
touch optionrc
cowsay | lolcat
ts-node --cmd=bidirection_stream 'Hello from me'
cd $ZDOTDIR
Document
git clone https://github.com/zsh-users/zsh-autosuggestions ~/.config/zsh/plugins/zsh-autosuggestions
echo $ZDOTDIR
 git clone https://github.com/zsh-users/zsh-history-substring-search $ZDOTDIR/plugins/zsh-history-substring-search
ls plugins
ls zsh-history-substring-search
xdg-open .p10k.zsh
askai how to uninstall nvm
rm -rf .nvm
cd npm
cd .npm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
nvm version
source .zshrc
nano .zshrc
nano .config/zsh/.zshrc
sed -n l
cat
WORDCHARS="${WORDCHARS/\//}"
echo $WORDCHARS
source .config/zsh/.zshrc
cd /usr/local/share
cd font
cd fonts
ls Red_Hat_Mono
sudo cp RobotoMono /usr/local/share/fonts
sudo cp -r RobotoMono /usr/local/share/fonts
cd RobotoMono
sudo mv RobotoMono RobotoMonoNerdFontMono
cd RobotoMonoNerdFontMono
sudo sudo chown -R root: /usr/local/share/fonts/RobotoMonoNerdFontMono
sudo chmod 644 /usr/local/share/fonts/RobotoMonoNerdFontMono/*
sudo restorecon -vFr /usr/local/share/fonts/RobotoMonoNerdFontMono
sudo cp -r DejaVuSansMono /usr/local/share/fonts
cd /usr/local/share/fonts
sudo chown -R root: /usr/local/share/fonts/DejaVuSansMono
sudo chmod 644 /usr/local/share/fonts/DejaVuSansMono/*
sudo restorecon -vFr /usr/local/share/fonts/DejaVuSansMono
sudo fc-cache -v
cmatrix --version
sudo dnf install cmatrix
cmatrix
cmatrix | lolcat
cd $XDG_CONFIG_HOME/ghostty/config
$XDG_CONFIG_HOME/ghostty
cd $XDG_CONFIG_HOME/ghostty
cd /usr/share/ghostty
cd $XDG_CONFIG_DIR/ghostty/themes
~/.config/ghostty/themes
cd /share
cd usr/share
cd themes
nano tokyonight_night
cd $XDG_CONFIG_DIR/ghostty/
cd $XDG_CONFIG_DIR/
source zshenv
source config
nano config
cd $XDG_CONFIG_DIR/ghostty
$XDG_CONFIG_DIR/ghostty/config
sudo $XDG_CONFIG_DIR/ghostty
cmatrix -r
ghostty +show-config --default --docs
dnf copr enable pgdev/ghostty\

sudo dnf copr enable pgdev/ghostty
y
sudo dnf install ghostty
cd $XDG_CONFIG_DIR/zsh
cd powerlevel10k
cd plugins/powerlevel10k
nano .p10k.zsh
node --version
nvm --version
nvm install 22
npm --version
npm install -g typescript ts-node
tsc --version
ts-node --version
yazi
cd ../leetcode-js
ghostty +show-config --default
sudo dnf remove Ptyxis
sudo dnf remove ptyxis
ls -
nano $XDG_CONFIG_DIR/ghostty/config
bindkey -l
bindkey -M
zle -al
p10k configure
cat 
fastfetch --help
fastfetch
curl -s https://ohmyposh.dev/install.sh | bash -s
oh-my-posh font install
mkdir .config/ohmyposh
nano $XDG_CONFIG_DIR/zsh/.zshrc
oh-my-posh config export --output .base.json
oh-my-posh config export --output ./base.json
rm -rf .base.json
nano base.json
xdg-open base.json
oh-my-posh init zsh
eval "$(oh-my-posh init zsh)"
exec zsh
pqwdqw
qwdqdw
pqwd
wdqwdqw
qwdq
qwdqd
code base.json
touch marcduiker.omp.json
cowsay 'hello world' 
sudo kill 3907
cat ~/.config/zsh/.zshrc
cat > ~/.config/zsh/.zshrc
cd ${ZDOTDIR}/zsh
cd ${ZDOTDIR}/
nano optionrc
nano ${ZDOTDIR}/optionrc
cd google-chrome
mkdir terminal.config
cp .config/ohmyposh terminal.config
cp -r .config/ohmyposh terminal.config
cp -r .config/zsh terminal.config
cp -r .config/ghostty terminal.config
sudo cp -r zshenv ~/terminal.config
askai how to change permission to read-write by everyone for a file in linux
cd terminal.config
chmod 666 zshenv
sudo chmod 666 zshenv
cd /etc/zsh
cd firefox
ls pref
ls pref -a
code marcduiker.omp.json
code .config/ohmyposh/marcduiker.omp.json
neovim --version
oh-my-posh font install 
git remote -l
askai how to get git remote origin
git remote get-name
askai how to get git global name/email
git config --global name
git config --global user.name
git config --global user.email
systemctl status postgres
sudo systemctl status postgresql
go install github.com/pressly/goose/v3/cmd/goose@latest
goose --version
goose up postgres://postgres:abc123@localhost:5432/enlighten?sslmode=disable -dir sql/schema
sqlc --vesion
sqlc version
goose postgres postgres://postgres:abc123@localhost:5432/enlighten?sslmode=disable up -dir sql/schema
goose postgres postgres://postgres:abc123@localhost:5432/enlighten?sslmode=disable up
goose postgres postgres://postgres:abc123@localhost:5432/enlighten up -dir sql/schema
sh goose-down.sh
sh goose-up.sh
sh scripts/run-prod.sh
sh scripts/run-dev.sh
git add -a
git branch grpc
code ~/.config/ohmyposh/marcduiker.omp.json
cd Documents/projects/qwdqwd
code ~/.config/ohmyposh/base.json
cd qdwqd
find Aura
--help
nano Aura
qdqwd
ghostty +list-themes\

cat tokyonight_night
mv marcduiker.omp.json tokyo_night.json
touch tokyo_day.json
askai what command to coppy contents from a file into another
cat tokyonight_night.json >> tokyo_day.json
cat tokyo_night.json >> tokyo_day.json
nano tokyo_night.json
code tokyo_day.json
dwqwdq
qdwqd
wqdq
ts-node manin.ts --cmd=bidirection_stream 'Hello from me'
ts-node main.ts --cmd=stream_request 'Hello from me'
cd /etc/
ts-node main.ts 
qwdwq
touch qwddqd.txt
nano ~/.config/ohmyposh/tokyo_day.json
nano ~/.config/ohmyposh/base.json
git commit -m "Feb 17, 2025"
git branch -b abc
git checkout -b abc
nano qwddqd.txt
git commit -m "dqwdqw"
touch doqpwd.txt
git checkout abc
rm -rf doqpwd.txt qwddqd.txt abc .git
mkdir abc
cd abc
cd Downloads/abc
rm -rf abc
qwdqwd
code ~/.config/ohmyposh/tokyo_night.json
qwdqw
wqdqwd
cd Documents/playground/go-node-gRPC/client
firefox
code ~/.config/ohmyposh/
nano ~/.config/ohmyposh/tokyo_night.json
zmodload zsh/terminfo
zmodload --help
zmodload -h
zmodload
ts-node main.ts --cmd=bidirection_stream 'hihihi'
rm-rf terminal-configs.zip
rm -rf terminal-configs.zip
cd configs-backup
mv configs-backup backup
mv configs-backup back_up
vi ~/.config/zsh/.zshrc
mkdir cd
rm -rf cd
mkdir tls-cer
touch gen.sh
openssl version
openssl req -x509 -newkey rsa:4096
openssl req -x509 -newkey rsa:4096 -days 365 -keyout ca-key.pem -out ca-cert.pem
openssl x509 -in ca-cert.pem -noout -text
openssl req -x509 -newkey rsa:4096 -days 365 -keyout ca-key.pem -out ca-cert.pem -subj "/C=vn/ST=Hanoi/L=Hanoi/O=wololo/OU=foo/CN=AnhBroo/emailAddress=anh.bigbrother@gmail.com"\

openssl x509 -req -in server-req.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-cer.pem
openssl x509 -in server-cert.pem -noout -text
openssl x509 -in server-cert.pem -noout -text -days 60
openssl x509 -in server-cer.pem -noout -text -days 60
openssl x509 -req -in server-req.pem -CA ca-cer.pem -CAkey ca-key.pem -CAcreateserial -out server-cer.pem -days 60
openssl x509 -req -in server-req.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-cer.pem -days 60 
openssl x509 -in server-cer.pem -noout -text
openssl verify -CAfile ca-cer.pem server-cer.pem
sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\
echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null\

sudo dnf install code
sudo dnf upgrade code
sudo dnf clean cache_types=all
sudo dnf clean all
sudo dnf clean packages
sudo dnf clean --help
google-chrome --version
c
cd tls-cer
cp tls-cer go-node-gRPC
cp -r tls-cer go-node-gRPC
mv tls-cer cert
sl
ts-node main.tsclear
make client-stream
make stream
make client
make setup
npx ts-node main.ts --cmd=stream_request 'Hello from me'
ts-node main.ts --cmd=bidirection_stream 'Hello from me'
git commit -m "implement gRPC interceptor, secure gRPC connection with SSL/TLS"
git pull
git pull main
git pull origin main
git commit -m "add server-ext.cnf"
ts-node main.ts --cmd=stream_request
docker pull nginx
dnf install clang-format
sudo dnf install clang-format
go get github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway
go get github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-swagger
go get github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
cd grpc-go
cd tour-of-go
cd proto_buf
mkdir proto
touch main.proto
go build -o bin/api cmd/api/main.go && ./bin/api
cp -r proto enlighten-backend
cp -r proto enlighten-frontend
sudo which protoc
protoc version
protoc --version
which libprotoc
which protoc
make gen_proto
make start
docker build anhbruhh/enlighten-api:0.2 .
make goose-up-local
make goose-up
make build-img
git commit -m "grpc: user service"
make server
cp -r enlighten-backend/proto enlighten-frontend
code proto
cd proto
ls proto
nano gen_proto.sh
nano package
nano package.json
npm install ts-proto @grpc/grpc-js
mkdir grpc-client-test
rm -rf grpc-client-test
cp -r /home/anh_xbro/Documents/playground/go-node-gRPC/client .
mv client grpc-client-test
cp -r enlighten-frontend/proto grpc-client-test
cp -r cert /home/anh_xbro/Documents/projects/enlighten/enlighten-backend
cp -r cert /home/anh_xbro/Documents/projects/enlighten/enlighten-frontend
cd internal/server
cd ../../cert
cd cmd/api
cd grpc-client-test
npm i @types/node -D
npm i dotenv
npm i @types/dotenv -D
cd portfolio
cd actions
nano sendMessage.ts
git commit -m "Feb 27, 2025"
cd enlighten
g++ version
cd "/home/anh_xbro/Documents/code/leetcode-cpp/_draft/" && g++ draft.cpp -o draft && "/home/anh_xbro/Documents/code/leetcode-cpp/_draft/"draft
cd Downloads/
npm run gen-proto
cd Documents/playground/node-playground/youtube-summary-generative-ai-extension
git commit -m "grpc server"
git commit -m "communicate to Go service by gRPC"
git commit -m "update README"
make gen-proto
docker rm dazzling_elbakyan
docker rmi nostalgic_tharp
docker rm nostalgic_tharp
docker build -t anhbruhh/enlighten-api:0.3 .
docker run -p 8080:8080 anhbruhh/enlighten-api:0.3
docker rm goofy_curie
docker rmi anhbruhh/enlighten-api:0.3
cd cert
sh gen.sh
docker login
docker rm festive_bhabha
docker rm nervous_shamir
docker rm boring_meninsky
docker rm magical_wright
docker rmi 480894f32281
docker rmi e41e8c06c3e7
docker rm affectionate_almeida
docker rm great_roentgen
docker rmi eager_jennings
docker rm eager_jennings
docker rm stoic_fermat
docker rm vigorous_satoshi
make cert
git commit -m "update gen-certificate scripts"
git commit -m "fix: recent posts"
git push origin grpc
docker run -p 8080:8080 anhbruhh/enlighten-api:0.2
docker rm dazzling_euclid
cd Documents/playground/node-playground/grpc-node
cd examples
cd helloworld
touch docker-compose.yaml
docker-compose version
git branch -b grpc-no-tls
git commit -m "try with no tls"
askai how to delete a git branch
git branch -d grpc-no-tls
git branch grpc-no-tls
git checkout grpc-no-tls
git commit -m "try deploy without tls"
git push origin grpc-no-tls
git branch -D grpc-no-tls
git commit -m "fix: grpc connect EADDRNOTAVAIL"
git clone git@github.com:AnhBigBrother/enlighten-frontend.git
rm -rf enlighten-frontend
rm -rf draw.excalidraw
git commit -m "fix: grpc connect EADDRNOTAVAIL #2"
git push origin grpc 
cd go-node-gRPC
touch dockerignore
touch dockerfile
code
code server
docker rm strange_antonelli
cd Documents/playground/go-node-gRPC/
docker rm heuristic_chebyshev
docker run -p 8080:8080 anhbruhh/test:0.1
docker rm wizardly_jones
docker rmi anhbruhh/enlighten-api:0.2
docker build -t anhbruhh/enlighten-api:0.2 .
docker image push anhbruhh/enlighten-api:0.2
docker image push anhbruhh/enlighten:0.2
curl -L https://github.com/lade-io/lade/releases/latest/download/lade-linux-amd64.tar.gz | tar xz\
sudo mv lade /usr/local/bin
sudo lade --version
sudo lade login
make gen-cert
sudo lade deploy --app enlighten-wololo-api
cd /usr/local/bin
sudo mv lade /usr/bin
which docker
which askai
which cowsay
sudo lade apps create enlighten-api
sudo lade deploy --app enlighten-api
sudo lade help
sudo lade apps --help
sudo lade apps list
sudo lade deploy --help
cd cl
docker build -t anhbruhh/enlighten:0.2 .
docker rmi 7fd93d549832
docker rmi 315404d2ad89
cd Documents/projects/enlighten/
git stash
docker rmi anhbruhh/enlighten-api:0.1
docker build -t anhbruhh/enlighten:0.1 .
docker image push anhbruhh/enlighten-api:0.1
cd ../enlighten-frontend
npm run lint
npm run build
npm run start
git commit -m "update backend-url"
cd Documents/projects/portfolio
git commit -m "update"
mkdir c_draft_code
sudo rm -rf /usr/local/go && tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf go1.24.1.linux-amd64.tar.gz
which go
nano ~/.config/zsh/.zprofile
source $XDG_CONFIG_DIR/zsh/.zprofile
go version
npm run dev
cd ../enlighten-backend
make start-pro
cd enlighten-
sqlc generate
make start-dev
git commit -m "refactor code"
git checkout grpc
git checkout main
cd enlighten-backend
cd enlighten-frontend
docker build -t anhbruhh/test:0.1 .
docker image push anhbruhh/test:0.1
docker rmi anhbruhh/test:0.1
cd ../server
sudo go run main.go
ts-node main.ts --cmd=bidirection_stream
docker rm romantic_pare
cd Documents/playground/go-node-gRPC
cd clie
cd client
cd Documents/playground/go-node-gRPC/server
docker image ls
docker run anhbruhh/grpc-test:0.1
docker rm amazing_hamilton
docker run -p=8080:8080 anhbruhh/grpc-test:0.1
docker ps -a
docker rm hopeful_lehmann
sudo rm -rf lade
which lade
lade --version
ts-node main.ts --cmd=stream_reply 
cd server
docker rmi anhbruhh/grpc-test:0.1
docker build -t anhbruhh/grpc-test:0.1 .
docker image push anhbruhh/grpc-test:0.1
cd ../client
ts-node main.ts
ps
date
which bash
_crontab -l
acqwdqwd
source $XDG_CONFIG_DIR/zsh/.zshrc
cd home
cd anh_xbro
touch helloworld.c
which g++
gcc build .
gcc build helloworld.c
sudo dnf update code
code --version
./helloworld
cd "/home/anh_xbro/Documents/code/c_draft_code/" && gcc tempCodeRunnerFile.c -o tempCodeRunnerFile && "/home/anh_xbro/Documents/code/c_draft_code/"tempCodeRunnerFile
cd "/home/anh_xbro/Documents/code/c_draft_code/" && gcc helloworld.c -o helloworld && "/home/anh_xbro/Documents/code/c_draft_code/"helloworld
gcc helloworld.c -o helloworld && /helloworld
cd "/home/anh_xbro/Documents/code/c_draft_code/" 
gcc helloworld.c -o helloworld && ./helloworld
sudo dnf update mesa-libglapi.x86_64
sudo dnf update mesa-dri-drivers.x86_64
nano main.go
nano zlogin
nano zlogout
nano zprofile
nano zshrc
nano bashrc
nano ts.conf
nano profile
nano profile.d
nano xdg
cd Code
grep --help
askai how to use grep command in linux?
askai how to use grep command in linux
grep "dep trai" the_secret.txt
askai what does chmod command do in linux
cd Documents/playground/go-playground/grpc-go
cd examples/helloworld
cd ~/.config/ohmyposh
cd Documents/code/c_draft_code
mkdir leetcode_c
mv leetcode_c leetcode-c
sudo kill 65672
sudo kill 19418
top | lolcat
libgcc --version
gcc --version
cd c_draft_code
mv c_draft_code c_draft
mv java_draft_code java_draft
mv c_draft c-draft
mv java_draft java-draft
mv js_draft_code js-draft
mv codeforces-cpp
mkdir cpp-draft
touch main.cpp
cpp --version
__cplusplus
g++ --version
sudo dnf install clang
which gcc
which clang
clang --version
cd Documents/code/cpp-draft
code codeforces-cpp
ls /usr/include/c++
rm -rf leetcode-cpp
mkdir leetcode-cpp
touch Makefile
touch _main.cpp
cd ../codeforces-cpp
vi--version
sudo dnf install @virtualization
sudo sudo dnf install neovim
sudo dnf install neovim
nvim -V1 -v
cd ~/.config/
askai what command to search for a file/folder by name
find . -name nvim
vi
vi .
find . -name vi
sudo find . -name vim
mkdir
mkdir vim
touch .vimrc
vi -u ~/.config/vim/.vimrc
vi version
vi --version
sl -a
vi -u ~/.vimrc
cd vim
vi vimrc
vi ~/.vim/vimrc
vi -u ~/.vim/vimrc main.c
echo($MYVIMRC)
echo $PATH
vi -u ~/.vim/vimrc ~/.vimrc
vi ~/.vimrc
vi -u ~/.vimrc main.c
_strace -o vim_strace vim
nano ~/.bashrc
cd /bin
vim --version
sudo rm -rf vi
cd /usr/bin
sudo find . -name vi
vi main.c
echo $VIM
echo $MYVIMRC
echo 
sudo source /etc/zshenv
nano zsh
nano zshenv
sudo source zshenv
sudo nano zshenv
mkdir .vim
cd .vim
touch vimrc
cat ~/.vimrc vimrc
cat ~/.vimrc >> vimrc
nano vimrc
rm -rf .vimrc
nano ~/.config/zsh/.zshrc
nano ~/.config/ghostty/config
nano ~/.vim/vimrc
vim main.c
askai what command uninstall a package in fedora
sudo dnf remove vi
sudo dnf remove vim
which vi
which nvim
sudo dnf install vim
sudo dnf remove vim-enhanced-2:9.1.1169-1.fc41.x86_64
which vim
rm -rf .vim
qwd
mkdir lua
touch option.lua
nvim option.lua
source /etc/zshenv
echo $XDG_CONFIG_HOME
sudo nvim /etc/zshenv
rm -rf vim
git clone https://github.com/nvim-lua/kickstart.nvim.git ${XDG_CONFIG_HOME}/nvim
l 
git branch
git branch 
mkdir nvim
touch init.lua
nvim lua/options.lua
nvim lua/core/options.lua
which code
whoami
sudo chown -R root $(which code)
sudo chown -R $(whoami) $(which code)
sudo code .
sudo code . --no-sandbox
sudo code . --no-sandbox --user-data-dir
sudo code . --user-data-dir=~/root
cd /usr/share
sudo find . -name code
where is code
sudo chown -R $(whoami) /usr/share/code
sudo chown -R root /usr/share/code
sudo 
git commit -m "Mar 14, 2025"
touch colorscheme.lua
mv colorscheme.lua colortheme.lua
nvim colorscheme.lua
nvim colortheme.lua
touch neotree.lua
nvim neotree.lua
nvim tokyo_night.json
cd lua
nvim bufferline.lua
rm -rf treesitter.lua telescope.lua
code init.lua
cd lua/plugins
rm -rf autoformatting.lua
touch none-ls.lua
sudo find . -name lazy.nvim
cd config_backup/nvim
\:map i
cd go
cd telemetry
cd $XDG_CONFIG_HOME
nvim ~/.config/zsh/.p10k.zsh
sudo dnf install tldr
tldr find
cd nvim/
cowsay 'hello world' | lolcat
cowsay 'wololo' | lolcat
which oh-my-posh
cowsay 'wololo' | lolcatclear
\:
cd lua/plugins/
nvim none-ls.lua
cd config_backup
nvim in
nvm
nvim ma
sudo find . -name lua
askai what command to find file 's directory
sudo find . -path "lua/user/keymap"
sudo find . -path "lua/*/keymap"
sudo find . -path "lua/*/keymaps"
cd lua/core/
nvim :w
rm -rf :w
mkdir .config.cache
cp -r ~/.config/ohmyposh .config.cache
cp -r ~/.config/zsh .config.cache
cp -r ~/.config/ghostty .config.cache
cp -r ~/.config/nvim .config.cache
cd .config.cache
rm -rf config_backup
mv .config.cache config.backup
cd config.backup
git remote get-url origin
git commit -m "first commit"
git show-ref
rm -rf .git
git init
git commit -m "initial commit"
git remote add origin git@github.com:AnhBigBrother/.config.git
cd nvim
go install github.com/go-delve/delve/cmd/dlv@latest
cd lua/core
nvim keymaps.lua
cd ../.
nvim init.lua
ping google.com
fzf
bash main.cpp
cat main.cpp
which fzf
dc
sudo dnf install fzf
fzf --version
find . -name vi | fzf > selected
find . -name main.go | fzf > selected
find . -name main.c | fzf > selected
cd Documents/projects/enlighten/enlighten-frontend
nvim ~/.config/ghostty/config
fastfetch | lolcat
tar -xf wezterm-20240203-110809-5046fc22.Ubuntu20.04.tar.xz
cd etc
rm -rf wezterm wezterm-20240203-110809-5046fc22.Ubuntu20.04.tar.xz
$ sudo dnf copr enable wezfurlong/wezterm-nightly
sudo dnf copr enable wezfurlong/wezterm-nightly
sudo dnf install wezterm
find . -name wezterm | fzf > selected
mkdir wezterm
cd wezterm
nvim wezterm.lua
nvim .zshrc
schemes = wezterm.get_builtin_color_schemes() \\
 schemes["tokyonight"]
wezterm.get_builtin_color_schemes()
wezterm.add_to_config_reload_watch_list("~/.config/wezterm/")
wezterm.add_to_config_reload_watch_list("$HOME/.config/wezterm/")
wezterm.add_to_config_reload_watch_list("${HOME}/.config/wezterm/")
echo $HOME
wezterm.add_to_config_reload_watch_list(wezterm.config_dir)
echo wezterm.config_dir
echo $(wezterm.config_dir)
cp wezterm.lua ~
mv we
mv wezterm.lua .wezterm.lua
rm -rf .wezterm.lua
rm -rf .p10k.zsh
cd plugins
rm -rf powerlevel10k
nvim .config/wezterm
sudo dnf uninstall wezterm
sudo dnf remove wezterm
cd .config/wezterm
cd .config/
rm -rf wezterm
cd ohmyposh
cd c-draft
gcc main.c -o main
gcc main.c -Wall -Werror -o main
gdb --version
man objdump
gdb ./main
mv _main.cpp main.cpp
g++ -std=c++11 main.cpp
rm -rf a.out
g++ -std=c++11 main.cpp -o main
cd ../c-draft
cd Documents/code/c-draft
gcc main.c -g -Wall -Werror -o main
cd cpp-draft
cd codeforces-cpp
cd config.backup/
rm -rf nvim
cp ~/.config/nvim .
cp -r ~/.config/nvim .
cd ghostty
git commit -m "neovim add debugging C/C++"
rm -rf config.backup
ghostty --version
nvim --version
cd Documents/code/
mkdir cpp-multithreading
cd cpp-multithreading
sudo fastfetch 
cat /proc/cpuinfo
ghostty +list-themes
cd /usr/share/ghostty/themes
nvim tokyonight
mv problem\#3108.cpp problems 
mv problem\#2401.cpp problems
mv binary-search problems
cd ../ohmyposh
cd .local/share/fonts
cd LiberationMono
mv LiberationMono ~/.local/share/fonts
fc-list : family style | grep -i nerd
cd Documents
cd Documents/code/cpp-multithreading
cd projects/enlighten/enlighten-backend
cd .config/ghostty
cd Downloads
unzip Agave.zip -d ~/.local/share/fonts
unzip CodeNewRoman.zip -d ~/.local/share/fonts
file
cd ~/.local/share/fonts
fc-cache -vf ~/.local/share/fonts/
nvim .config/ghostty/config
ghostty +list-fonts
make build
cd .config/nivm
cd ../leetcode-go
git commit -m "Mar 26, 2025"
git remote show
git remote set origin git@github.com:AnhBigBrother/leetcode-go.git
git remote update 
git remote update origin git@github.com:AnhBigBrother/leetcode-go.git
git remote remove origin
git remote add origin git@github.com:AnhBigBrother/leetcode-go.git
git remote show origin
go install github.com/charmbracelet/glow@latest
askai what how to check computer hardware in terminal | glow
askai what how to check computer hardware in terminal | glow -
echo `# Welcome to my React Markdown Previewer! \
\
## This is a sub-heading...\
### And here's some other cool stuff:\
\
Heres some code, `<div></div>`, between 2 backticks.\
\
```\
// this is multi-line code:\
\
function anotherExample(firstLine, lastLine) {\
  if (firstLine == '```' && lastLine == '```') {\
    return multiLineCode;\
  }\
}\
```\
\
You can also make text **bold**\
Or _italic_.\
Or... **_both!_**\
And feel free to go crazy ~~crossing stuff out~~.\
\
There's also [links](https://www.youtube.com/watch?v=dQw4w9WgXcQ), and\
> Block Quotes!\
\
And if you want to get really crazy, even tables:\
\
Wild Header | Crazy Header | Another Header?\
------------ | ------------- | -------------\
Your content can | be here, and it | can be here....\
And here. | Okay. | I think we get it.\
\
- And of course there are lists.\
  - Some are bulleted.\
     - With different indentation levels.\
        - That look like this.\
        \
        \
1. And there are numbered lists too.\
1. Use just 1s if you want!\
1. And last but not least, let's not forget embedded images:\
\
![black puppy](https://picsum.photos/id/237/200/300 'black puppy')` | glow
echo "Wild Header | Crazy Header | Another Header?\
------------ | ------------- | -------------\
Your content can | be here, and it | can be here....\
And here. | Okay. | I think we get it." | glow
echo "# Welcome to my React Markdown Previewer! \
\
## This is a sub-heading...\
### And here's some other cool stuff:\
\
Heres some code, `<div></div>`, between 2 backticks.\
\
```\
// this is multi-line code:\
\
function anotherExample(firstLine, lastLine) {\
  if (firstLine == '```' && lastLine == '```') {\
    return multiLineCode;\
  }\
}\
```\
\
You can also make text **bold**\
Or _italic_.\
Or... **_both-o vim_strace vim*\
And feel free to go crazy ~~crossing stuff out~~.\
\
There's also [links](https://www.youtube.com/watch?v=dQw4w9WgXcQ), and\
> Block Quotes!\
\
And if you want to get really crazy, even tables:\
\
Wild Header | Crazy Header | Another Header?\
------------ | ------------- | -------------\
Your content can | be here, and it | can be here....\
And here. | Okay. | I think we get it.\
\
- And of course there are lists.\
  - Some are bulleted.\
     - With different indentation levels.\
        - That look like this.\
        \
        \
1. And there are numbered lists too.\
1. Use just 1s if you want!\
1. And last but not least, let's not forget embedded images:\
\
puppy](https://picsum.photos/id/237/200/300 'black puppy')" | glow
echo "1. And there are numbered lists too.\
1. Use just 1s if you want!\
1. And last but not least, let's not forget embedded images:\
\
[puppy](https://picsum.photos/id/237/200/300 'black puppy')" | glow
echo "<h1>Hello</h1>"
go mod vendor
askai --model=gemini-2.0-flash --lang=Vietnamese --temp=2.0 --limit=4000 write a story about a magic backpack.
askai how to check computer hardware in terminal?
askai how to check computer hardware in terminal
nvim ~/.config/zsh/.zshrc
xdg-open ~/.config/zsh/.zshrc
askai what command to show folder properties
ls -l
askai what command to show folder properties, like folder size, etc
git commit -m "render markdown, text-stream mode"
git reset --hard
git reset HEAD~
git push origin main --force
mkdir terminal-loading
cd terminal-loading
touch main.go
go mod init
go mod init term-loader
go build && ./main
cd ../
cd askai
askai what how to check computer hardware in terminal
cd ~/.config/ohmyposh/
cd Documents/playground/go-playground/terminal-loading
go build -o main && ./main
askai --model=gemini-2.0-flash --lang=Vietnamese --temp=1.5 --stream write a story about a magic backpack.
git commit -m "add loading ui in no-stream mode"
askai --model=gemini-2.0-flash --lang=Vietnamese --temp=1.5 awrite a story about a magic backpack.
mkdir c-playground
askai does using dynamic allocation in c++ make the program run faster
askai write a story about a magic backpack.
askai --model=gemini-2.0-flash --lang=Japanese --temp=1.5 awrite a story about a magic backpack.
askai --model=gemini-2.0-flash when should I use dynamic allocation in c++
askai --model=gemini-2.0-flash does std::vector in c++ using dynamic allocation under the hood
askai --model=gemini-2.0-flash does slice in Golang using dynamic allocation under the hood
askai --model=gemini-2.0-flash does using "make()" in Golang allocate data on the heap
askai --model=gemini-2.0-flash if I create an array like this: ```arr := []int{}```, where does the array allocate on? heap or stack
askai --model=gemini-2.0-flash if I create an array like this: ```arr := []int{}```, where does the array allocate on, it is heap or stack
askai --model=gemini-2.0-flash does allocating data on the stack faster than on the heap
askai what is the "smart pointer" in some programming language like c++, go, etc.
go mod tidy
git commit -m "ignore vendor"
cd go/bin
rm -rf askai
go install github.com/AnhBigBrother/askai
go install github.com/AnhBigBrother/askai@latest
askai in Golang, should I commit vendor code to github
askai when should I use "go mod vendor" in Golang.
askai compare interpreter vs compiler
askai what is the "heap" and the "stack" in programming
askai "does the 'heap' data structure to dynamic allocate menmory is a data structure simmilar to the 'priority_queue'?"
askai "how does the 'heap memory' work?"
askai --model="gemini-2.5-pro"  write a story about a magic backpack.
askai --model="gemini-2.5-pro-exp"  write a story about a magic backpack.
askai --model="gemini-2.5-pro-exp-03-25"  write a story about a magic backpack.
go install
askai "write a story about a magic backpack."
git commit -m "update default model"
askai --help
askai --model=gemini-2.0-flash --lang=Vietnamese --temp=1.5 --stream "write a story about a magic backpack."
askai "what does the word 'tensor' mean?"
\:wq
code main.go
cd $XDG_CONFIG_HOME/nvim
which wezterm
where is wezterm
sudo dnf clean
cd /etc/yum.repos.d
sudo rm -rf google-chrome.repo
sudo rm -rf _copr:copr.fedorainfracloud.org:wezfurlong:wezterm-nightly.repo
dnf repolist
cd Documents/code/leetcode-cpp
cd ../leetcode-c
nvim utils
_strace ls
cd Documents/playground/
mkdir cpp-playground
mkdir cpp-socket
cd cpp-socket/p
askai "what command to get the IP address in Linux?"
ip addr
hostname -I
rm -rf problem\#2873.c
mkdir leetcode-c/cpp
mv leetcode-c leetcode-c/cpp 
rm -rf cpp
cd ../leetcode-cpp
mkdir leetcode-c2
mv leetcode-c leetcode-c2
mv leetcode-cpp leetcode-c2
mv leetcode-c2 leetcode-c
touch README.md
cd leetcode-cpp
touch .gitignore
cd leetcode-c
mv leetcode-c c
mv leetcode-cpp cpp
mkdir problems
mv problem\#2140.c problem\#763.c problem\#2226.c problem\#2379.c problem\#2551.c problems
cd problems
mv problem\#2523.c problem\#2529.c problem\#2560.c problem\#2874.c problem\#3208.c problem\#3306.c problem\#3356.c problems
git init -y
git init 
cd ../cpp
rm -rf .gitignore
git branch -M main
git remote add origin git@github.com:AnhBigBrother/leetcode-c.git
git commit -m "Apr 2, 2025"
mkdir socket-client
touch main.c
askai "what programming language/framework used to build microsoft visual studio?"
mkdir socket-server
cd socket-server
mv socket-client socket-server socket
mkdir socket-utils
rm -rf socket-utils
cd Documents/playground/c-playground/socket
cd socket-client
cd Documents/playground/c-playground/socket/socket-server
mkdir bin
lsof -i 2000
lsof -i :2000
cle
cd Documents/code/leetcode-c
cd Documents/playground/go-playground/
mkdir socket
cd websocket
mv socket tcp-socket
cd tcp-socket
cd projects
cd go-playground
cd fts
go 
lsof -i :8080
cd Documents/playground/go-playground/askai
sudo dnf clean metadata
sudo dnf autoremove
sudo dnf install cmake
cd Documents/projects/
cd playground
cd c-playground
cmake --version
mkdir cmake-example
mv main.c hellow.c
gcc -o hellow hellow.c
nvim random.c
rm -rf main.o
rm -rf random.
rm -rf random.o
nvim random.h
gcc -o main main.c random.c -lm
gcc -c main.c
gcc -c random.c
gcc -o main main.o random.o
gcc -o main main.o random.o -lm
rm -rf hellow
make hellow
make 
./hellow
rm -rf hellow main main.o random.o
touch hellow.h
nvim hellow.c
touch CMakeLists.txt
nvim CMakeCache.txt
nvim CMakeLists.txt
nvim ../CMakeLists.txt
nvim ../
more ../CMakeLists.txt
more ../main.c
rm -rf build
make clean
nvim ../main.c
nvim ../hellow.c
cd Documents/playground/c-playground
cd cmake-example
mkdir ninja
cd ninja
sudo dnf install ninja-build
cd Documents/playground/c-playground/cmake-example/ninja
cmake -G Ninja ..
ninja
./main
cd socket
cd leetcode-go
cd ../leetcode-c/c
cd Documents/playground
cd cpp-playground
cd cpp-socket
rm -rf cpp-socket
cd include
askai "what command to copy all files/folders from a folder to another folders?"
cp -r Sockets/* .
cd Sockets
rm -rf Sockets
rm -rf SocketTutorial
git clone git@github.com:rhymu8354/SocketTutorial.git
cd SocketTutorial
mkdir bui
rm -rf bui
mkdir build
cd build
cmake ..
cd Sender
make
cd ../..
cd Client
cd src
cd Documents/projects/enlighten/enlighten-backend
nvim main
mv disjoint-set.h disjoint_set.h
cd Documents/playground/c-playground/cmake-example
cd Documents/playground/cpp-playground/SocketTutorial
./bin/main
rm -rf main
mv utils libs
nvim Makefile
	clang main.c ./libs/*.c -o ./bin/main && ./bin/main\

git commit -m "Apr 7, 2025"
cd Documents/
mkdir linux
mkdir web_stuff
mv api-client-data web_stuff
mv libs\&config web_stuff
mv oauth-diagrams web_stuff
mkdir pdf
mv Bytebytego_Big_Archive_System_Design_2023.pdf pdf
mv my-profile my_info
cd web_stuff
cd libs\&config
mv libs\&config js_libs_n_configs
mv oauth-diagrams oauth_diagrams
mv api-client-data api_client_data
mkdir root
mkdir boot proc sys dev usr
cd usr
mkdir lib lib64 bin sbin
ln -s usr/lib lib
ln -s usr/lib64 lib64
ln -s usr/bin bin
ln -s usr/sbin sbin
file ./
askai "what program mange files and folders in fedora 41?"
sudo dnf check-update
sudo dnf update
which plasma-breeze-common
sudo find . -name plasma-breeze-common
sudo find . -name plasma
cd ./usr/lib64/qt5/plugins/plasma
cd Documents/linux/root
cd Documents/linux
cd root
nautilus ./
pwd
export LINUX_VISUAL_ROOT=/home/anh_xbro/Documents/linux/root
echo $LINUX_VISUAL_ROOT
git clone --depth=1 https://github.com/torvalds/linux
mv linux linux_explore
cd linux_explore
mv linux_explore linux
cd linux
make tinyconfig 
askai "what is the ncurses package in linux?"
sudo dnf install ncurses-devel
make menuconfig
fastfetch 
askai "what command to show cpu core in linux?"
lscpu
askai "how many cores does intel i7 6920HQ has?"
make -j4
mv arch/x86/boot/bzImage ..
mv bzImage root/boot
cd root/boot
cd Documents/code/leetcode-js
nvim __Heap-PriorityQueue.ts
cd Documents/code/leetcode-c/c
cd Documents/code/leetcode-go
nvim main.go
cd ~/.config/nvim
go run main.go
go run .
make run
cd cpp
cd utils
mv disjoint-set.hpp disjoint_set.hpp
mv disjoint-set.cpp disjoint_set.cpp
nvim main.cpp
mv libs utils
cd c
nvim main.c
git add -A
git commit -m "refactor utils folder"
git push origin main
git log --oneline
cd ~/.config/ghostty
code .
code config
cd zsh
nvim .
cd /etc
nvim zshenv
nvim bashrc
cd pkgs
cd Public
cd ..
tmux --version
tmux version
askai "what command to check tmux version?"
cd /
sudo find . -name tmux
tmux -V
which tmux
top
tmux new -s s1
askai "how to split new pane in tmux?"
tmux
tmux ls
cd .config
mkdir tmux
cd tmux
touch tmux.conf
tmux attach Sess1
\:q
cd
cd .config/ohmyposh
echo "hello world"
tmux new -s Sess3
tmux kill-session
cd .config/zsh
cd ../nvim
ghostty +list-keybinds
cd ../ghostty
nvim config
rm -rf plugins
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
cd 
ls 
ls -a
rm -rf .tmux
git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
cd .config/nvim
tmux new -s Sess1
ls
tmux kill-server
cd .config/tmux
nvim tmux.conf
nvim 
tmux list-windows
nvim
askai "how to start a new session in tmux?"
askai "how to start a new session when in a session in tmux?"
askai "how to switch to a new session in tmux?"
tmux list-sessions
tmux new -s Sess2
clear
tmux attach Sess2
tmux attach
tmux attach Sess2
tmux attach
askai "how to switch to another session in tmux?"
cd .config/tmux
nvim tmux.conf
clear
nvim 
nvim tmux.conf
cd plugins
ls
cd ..
clear
tmux list-sessions
tmux attach
tmux kill-server
tmux new -s first
clear
cd .config/tmux
nvim tmux.conf
ls
cd plugins
ls
rm -rf tmux-tokyo-night
ls
cd ..
clear
tmux attach
nvim tmux.conf
tmux kill-server
tmux new -s first
tmux new -s second
nvim tmux.conf
cd .config/tmux
nvim tmux.conf
\:q
clear
tmux kill-session
tmux kill-session
clear
tmux list-sessions
tmux kill-server
clear
cd .config/zsh
ls -a
touch .gitignore
nvim .gitignore
cd 
mkdir dotfile
mv dotfile dotfiles
cd .config
cp -r nvim tmux zsh ohmyposh ../dotfiles
